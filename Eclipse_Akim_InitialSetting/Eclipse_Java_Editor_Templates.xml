<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="false" context="java-statements" deleted="false" description="dynamic cast" enabled="true" id="org.eclipse.jdt.ui.templates.cast" name="cast">${type} ${new_name} = (${type}) ${name};</template><template autoinsert="true" context="postfix" deleted="false" description="Casts the expression to a new type" enabled="true" id="org.eclipse.jdt.postfixcompletion.cast" name="cast">((${})${inner_expression})${cursor}</template><template autoinsert="false" context="java-statements" deleted="false" description="catch block" enabled="true" id="org.eclipse.jdt.ui.templates.catch" name="catch">catch (${Exception} ${exception_variable_name}) {
	${cursor}// ${todo}: handle exception
}</template><template autoinsert="false" context="java-statements" deleted="false" description="do while statement" enabled="true" id="org.eclipse.jdt.ui.templates.do" name="do">do {
	${line_selection}${cursor}
} while (${condition:var(boolean)});</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a do-while loop" enabled="true" id="org.eclipse.jdt.postfixcompletion.dowhile" name="dowhile">do {&#13;
	${cursor}&#13;
} while (${i:inner_expression(boolean)});</template><template autoinsert="false" context="java-statements" deleted="false" description="else block" enabled="true" id="org.eclipse.jdt.ui.templates.else" name="else">else {
	${cursor}
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a negated if statement" enabled="true" id="org.eclipse.jdt.postfixcompletion.else" name="else">if (!${i:inner_expression(boolean)}${}) {&#13;
	${cursor}&#13;
}</template><template autoinsert="false" context="java-statements" deleted="false" description="else if block" enabled="true" id="org.eclipse.jdt.ui.templates.elseif" name="elseif">else if (${condition:var(boolean)}) {
	${cursor}
}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="errr">System.out.println(" error :  ${index}"); &#13;
${cursor}</template><template autoinsert="false" context="java-statements" deleted="false" description="$FALL-THROUGH$ marker" enabled="true" id="org.eclipse.jdt.ui.templates.fall-through" name="fall-through">//$$FALL-THROUGH$$</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;code&gt;false&lt;/code&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.code_tag_false" name="false">&lt;code&gt;false&lt;/code&gt;</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a new field" enabled="true" id="org.eclipse.jdt.postfixcompletion.field" name="field">${field:newField(i)} = ${i:inner_expression};${cursor}</template><template autoinsert="false" context="java-statements" deleted="false" description="finally block" enabled="true" id="org.eclipse.jdt.ui.templates.finally" name="finally">finally {
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="use index on array" enabled="true" id="org.eclipse.jdt.ui.templates.for_array" name="for">for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${line_selection}${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="use index on array with temporary variable" enabled="true" id="org.eclipse.jdt.ui.templates.for_temp" name="for">for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${array_type} ${array_element} = ${array}[${index}];
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate over collection" enabled="true" id="org.eclipse.jdt.ui.templates.for_collection" name="for">for (${iteratorType:newType(java.util.Iterator)} ${iterator} = ${collection}.iterator(); ${iterator}.hasNext(); ) {
	${type:elemType(collection)} ${name:newName(type)} = (${type}) ${iterator}.next();
	${cursor}
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a for statement" enabled="true" id="org.eclipse.jdt.postfixcompletion.for" name="for">for (${type:newActualType(i)} ${n:newName(i)} : ${i:inner_expression(java.util.Collection,array)}) {&#13;
	${cursor}&#13;
}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate over an array or Iterable" enabled="true" id="org.eclipse.jdt.ui.templates.for_iterable" name="foreach">for (${iterable_type} ${iterable_element} : ${iterable}) {
	${cursor}
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a for statement which iterates over an array" enabled="true" id="org.eclipse.jdt.postfixcompletion.fori" name="fori">for (int ${index} = 0; i &lt; ${i:inner_expression(array)}.length; ${index}++) {&#13;
	${cursor}&#13;
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates an indexed for statement which uses the given integer as upper bound" enabled="true" id="org.eclipse.jdt.postfixcompletion.foriub" name="foriub">for (int ${index} = 0; i &lt; ${i:inner_expression(int)}; ${index}++) {&#13;
	${cursor}&#13;
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a for statement which iterates over an array in reverse order" enabled="true" id="org.eclipse.jdt.postfixcompletion.forr" name="forr">for (int ${index} = ${i:inner_expression(array)}.length - 1; i &gt;= 0; ${index}--) {&#13;
	${cursor}&#13;
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates an indexed for statement which uses the given integer - 1 as starting value (counting backwards)" enabled="true" id="org.eclipse.jdt.postfixcompletion.forrlb" name="forrlb">for (int ${index} = ${i:inner_expression(int)} - 1; i &gt;= 0 ; ${index}--) {&#13;
	${cursor}&#13;
}</template><template autoinsert="false" context="java-statements" deleted="false" description="if statement" enabled="true" id="org.eclipse.jdt.ui.templates.if" name="if">if (${condition:var(boolean)}) {
	${line_selection}${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="if else statement" enabled="true" id="org.eclipse.jdt.ui.templates.ifelse" name="ifelse">if (${condition:var(boolean)}) {
	${cursor}
} else {
	
}</template><template autoinsert="false" context="java-statements" deleted="false" description="if statement checking for not null" enabled="true" id="org.eclipse.jdt.ui.templates.ifnotnull" name="ifNotNull">if (${name:var} != null) {
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="if statement checking for null" enabled="true" id="org.eclipse.jdt.ui.templates.ifnull" name="ifNull">if (${name:var} == null) {
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="dynamic type test and cast" enabled="true" id="org.eclipse.jdt.ui.templates.instanceof" name="instanceof">if (${name:var} instanceof ${type}) {
	${type} ${new_name} = (${type})${name};
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="lazy creation" enabled="true" id="org.eclipse.jdt.ui.templates.lazy" name="lazy">if (${name:var} == null) {
	${name} = new ${type}(${arguments});
	${cursor}
}

return ${name};</template><template autoinsert="false" context="java-statements" deleted="false" description="explicit lock acquisition" enabled="true" id="org.eclipse.jdt.ui.templates.lock" name="lock">${lock:var(java.util.concurrent.locks.Lock)}.lock();
try {
	${line_selection}${cursor}
} finally {
	${lock}.unlock();
}</template><template autoinsert="false" context="java-members" deleted="false" description="main method" enabled="true" id="org.eclipse.jdt.ui.templates.main" name="main">public static void main(String[] args) {
	${cursor}
}</template><template autoinsert="false" context="java" deleted="false" description="create new object" enabled="true" id="org.eclipse.jdt.ui.templates.new" name="new">${type} ${name} = new ${type}(${});</template><template autoinsert="false" context="java-empty" deleted="false" description="create new class" enabled="true" id="org.eclipse.jdt.ui.templates.new_class" name="new_class">package ${enclosing_package};

public class ${primary_type_name} ${cursor} {

}</template><template autoinsert="false" context="java-empty" deleted="false" description="create new enumeration" enabled="true" id="org.eclipse.jdt.ui.templates.new_enum" name="new_enum">package ${enclosing_package};

public enum ${primary_type_name} ${cursor} {

}</template><template autoinsert="false" context="java-empty" deleted="false" description="create new interface" enabled="true" id="org.eclipse.jdt.ui.templates.new_iface" name="new_iface">package ${enclosing_package};

public interface ${primary_type_name} ${cursor} {

}</template><template autoinsert="false" context="module" deleted="false" description="create module declaration" enabled="true" id="org.eclipse.jdt.ui.templates.new_module" name="new_module">module ${name} {
	${cursor}
}</template><template autoinsert="false" context="java-empty" deleted="false" description="create new record" enabled="true" id="org.eclipse.jdt.ui.templates.new_record" name="new_record">package ${enclosing_package};

public record ${primary_type_name}(${cursor}) {

}</template><template autoinsert="false" context="java" deleted="false" description="non-externalized string marker" enabled="true" id="org.eclipse.jdt.ui.templates.non-nls" name="nls">//$$NON-NLS-${N}$$</template><template autoinsert="true" context="postfix" deleted="false" description="Creates an if statement and checks if the expression does not resolve to null" enabled="true" id="org.eclipse.jdt.postfixcompletion.nnull" name="nnull">if (${i:inner_expression(java.lang.Object,array)} != null) {&#13;
	${cursor}&#13;
}</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;code&gt;null&lt;/code&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.code_tag_null" name="null">&lt;code&gt;null&lt;/code&gt;</template><template autoinsert="true" context="postfix" deleted="false" description="Creates an if statement which checks if expression resolves to null" enabled="true" id="org.eclipse.jdt.postfixcompletion.null" name="null">if (${i:inner_expression(java.lang.Object,array)} == null) {&#13;
	${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="outp">out.println("${cursor}");&#13;
${line_selection}</template><template autoinsert="false" context="java-members" deleted="false" description="private method" enabled="true" id="org.eclipse.jdt.ui.templates.private_method" name="private_method">private ${void} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="private static method" enabled="true" id="org.eclipse.jdt.ui.templates.private_static_method" name="privatestatic">private static ${void} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="protected method" enabled="true" id="org.eclipse.jdt.ui.templates.protected_method" name="protected_method">protected ${void} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="public method" enabled="true" id="org.eclipse.jdt.ui.templates.public_method" name="publicm">public ${void} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java-members" deleted="false" description="public static method" enabled="true" id="org.eclipse.jdt.ui.templates.public_static_method" name="publicsm">public static ${void} ${name}(${}) {
	${cursor}
}</template><template autoinsert="false" context="java" deleted="false" description="runnable" enabled="true" id="org.eclipse.jdt.ui.templates.runnable" name="runnable">new Runnable() {
	public void run() {
		${line_selection}
	}
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a short if statement" enabled="true" id="org.eclipse.jdt.postfixcompletion.sif" name="sif">((${i:inner_expression(boolean)}) ? ${} : ${cursor})</template><template autoinsert="true" context="postfix" deleted="false" description="Creates an if statement which checks if the expression does not resolve to null" enabled="true" id="org.eclipse.jdt.postfixcompletion.snnull" name="snnull">(${i:inner_expression(java.lang.Object,array)} != null) ? ${inner_expression}${} : ${cursor}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a short if statement which checks for null" enabled="true" id="org.eclipse.jdt.postfixcompletion.snull" name="snull">(${i:inner_expression(java.lang.Object,array)} == null) ? ${} : ${inner_expression}${cursor}</template><template autoinsert="false" context="java-members" deleted="false" description="static final field" enabled="true" id="org.eclipse.jdt.ui.templates.static_final" name="static_final">${visibility:link('public ','protected ','','private ')}static final ${type:link(String,int)} ${NAME} = ${expr:link('""',0)};</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a new stream using Stream.of" enabled="true" id="org.eclipse.jdt.postfixcompletion.stream" name="stream">Stream.of(${i:inner_expression(array)})${cursor}</template><template autoinsert="false" context="java-statements" deleted="false" description="switch case statement" enabled="true" id="org.eclipse.jdt.ui.templates.switch" name="switch">switch (${key}) {
	case ${value}:
		${cursor}
		break;

	default:
		break;
}</template><template autoinsert="false" context="java-statements" deleted="false" description="switch labeled statement" enabled="true" id="org.eclipse.jdt.ui.templates.switch.labeled" name="switch">switch (${key}) {
	case ${value} -&gt;
		${cursor}
		

	default -&gt;
		throw new IllegalArgumentException("Unexpected value: " + ${key});
}</template><template autoinsert="false" context="java" deleted="false" description="switch case expression" enabled="true" id="org.eclipse.jdt.ui.templates.switch.case.expression" name="switch">switch (${key}) {
	case ${value}: {
		${cursor}
		yield ${type};
	}
	default:
		throw new IllegalArgumentException("Unexpected value: " + ${key});
}</template><template autoinsert="false" context="java" deleted="false" description="switch labeled expression" enabled="true" id="org.eclipse.jdt.ui.templates.switch.labeled.expression" name="switch">switch (${key}) {
	case ${value} -&gt;
		${cursor}
		

	default -&gt;
		throw new IllegalArgumentException("Unexpected value: " + ${key});
}</template><template autoinsert="false" context="java-statements" deleted="false" description="synchronized block" enabled="true" id="org.eclipse.jdt.ui.templates.synchronized" name="synchronized">synchronized (${mutex:var}) {
	${line_selection}
}</template><template autoinsert="true" context="java-statements" deleted="false" description="print to standard error" enabled="true" id="org.eclipse.jdt.ui.templates.syserr" name="syserr">System.err.println(${word_selection}${});${cursor}</template><template autoinsert="true" context="java-statements" deleted="false" description="print to standard out" enabled="true" id="org.eclipse.jdt.ui.templates.sysout" name="sysout">System.out.println(${word_selection}${});${cursor}</template><template autoinsert="true" context="postfix" deleted="false" description="Sends the affected string to a System.out.println(..) call" enabled="true" id="org.eclipse.jdt.postfixcompletion.sysout" name="sysout">System.out.println(${i:inner_expression(java.lang.String)}${});${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="syssout">System.out.println("${word_selection}${}");${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="syst1">System.out.println("${field} : " + ${field});&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="syst2">System.out.println("${field} : " + ${field} +", ${index} : " + ${index});&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="syst3">System.out.println("${field} : " + ${field} +", ${index} : " + ${index}+", ${localVar} : " + ${localVar});&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="syst4">System.out.println("${field} : " + ${field} +", ${index} : " + ${index}+", ${localVar} : " + ${localVar} + ", ${iterable} : " + ${iterable});&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="syst5">System.out.println("${field} : " + ${field} +", ${index} : " + ${index}+", ${localVar} : " + ${localVar} + ", ${iterable} : " + ${iterable}+ ", ${iterable_element} : " + ${iterable_element});&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="syst6">System.out.println("${field} : " + ${field} +", ${index} : " + ${index}+", ${localVar} : " + ${localVar} + ", ${iterable} : " + ${iterable}+ ", ${iterable_element} : " + ${iterable_element}+ ", ${iterable_type} : " + ${iterable_type}  );&#13;
${cursor}</template><template autoinsert="true" context="java-statements" deleted="false" description="print current method to standard out" enabled="true" id="org.eclipse.jdt.ui.templates.systrace" name="systrace">System.out.println("${enclosing_type}.${enclosing_method}()");</template><template autoinsert="false" context="java-members" deleted="false" description="test factory method (JUnit Jupiter)" enabled="true" id="org.eclipse.jdt.ui.templates.testfactory_junit5" name="test_factory">@${testfactoryType:newType(org.junit.jupiter.api.TestFactory)}
${returnType:link('DynamicNode', 'Stream&lt;DynamicNode&gt;', 'Collection&lt;DynamicNode&gt;', 'Iterable&lt;DynamicNode&gt;', 'Iterator&lt;DynamicNode&gt;', 'DynamicNode[]')} ${testFactoryName}() throws Exception {
	// ${todo}: generate dynamic test cases
	${cursor}return null;${typeImports:import('org.junit.jupiter.api.DynamicNode')}${staticImports:importStatic('org.junit.jupiter.api.Assertions.*', 'org.junit.jupiter.api.DynamicContainer.*', 'org.junit.jupiter.api.DynamicTest.*')}
}</template><template autoinsert="false" context="java-members" deleted="false" description="test method (JUnit 5)" enabled="true" id="org.eclipse.jdt.ui.templates.test_junit5" name="test_jupiter">@${testType:newType(org.junit.jupiter.api.Test)}
void ${testName}() throws Exception {
	${staticImport:importStatic('org.junit.jupiter.api.Assertions.*')}${cursor}
}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="test1">System.out.println("test1");&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="test2">System.out.println("test2");&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="test3">System.out.println("test3");&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="test4">System.out.println("test4");&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="test5">System.out.println("test5");&#13;
${cursor}</template><template autoinsert="true" context="postfix" deleted="false" description="Throws the given Exception" enabled="true" id="org.eclipse.jdt.postfixcompletion.throw" name="throw">throw ${true:inner_expression(java.lang.Throwable)};</template><template autoinsert="false" context="java" deleted="false" description="convert collection to array" enabled="true" id="org.eclipse.jdt.ui.templates.toarray" name="toarray">(${type:elemType(collection)}[]) ${collection}.toArray(new ${type}[${collection}.size()])</template><template autoinsert="true" context="javadoc" deleted="false" description="&lt;code&gt;true&lt;/code&gt;" enabled="true" id="org.eclipse.jdt.ui.templates.code_tag_true" name="true">&lt;code&gt;true&lt;/code&gt;</template><template autoinsert="false" context="java-statements" deleted="false" description="try catch block" enabled="true" id="org.eclipse.jdt.ui.templates.try" name="try_catch">try {
	${line_selection}${cursor}
} catch (${Exception} ${exception_variable_name}) {
	// ${todo}: handle exception
}</template><template autoinsert="false" context="java-statements" deleted="false" description="try finally block" enabled="true" id="org.eclipse.jdt.ui.templates.tryfinally" name="try_finally">try {
	${line_selection}${cursor}
} finally {
	// ${todo}: handle finally clause
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a new variable" enabled="true" id="org.eclipse.jdt.postfixcompletion.var" name="var">${field:newType(inner_expression)} ${var:newName(inner_expression)} = ${inner_expression};${cursor}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate with enumeration" enabled="true" id="org.eclipse.jdt.ui.templates.while_enumeration" name="while">while (${en:var(java.util.Enumeration)}.hasMoreElements()) {
	${type:argType(en)} ${elem:newName(type)} = (${type}) ${en}.nextElement();
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="iterate with iterator" enabled="true" id="org.eclipse.jdt.ui.templates.while_iterator" name="while">while (${it:var(java.util.Iterator)}.hasNext()) {
	${type:argType(it)} ${elem:newName(type)} = (${type}) ${it}.next();
	${cursor}
}</template><template autoinsert="false" context="java-statements" deleted="false" description="while loop with condition" enabled="true" id="org.eclipse.jdt.ui.templates.while_condition" name="while">while (${condition:var(boolean)}) {
	${line_selection}${cursor}
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates a while loop" enabled="true" id="org.eclipse.jdt.postfixcompletion.while" name="while">while (${i:inner_expression(boolean)}) {&#13;
	${cursor}&#13;
}</template><template autoinsert="true" context="postfix" deleted="false" description="Creates an if statement which checks if a given numeric variable is within a region" enabled="true" id="org.eclipse.jdt.postfixcompletion.withinregion" name="withinregion">if (${i:inner_expression(float,int,double,long)} &gt;= ${lower_bound} &amp;&amp; ${inner_expression} &lt;= ${upper_bound}) {&#13;
	${cursor}&#13;
}</template></templates>